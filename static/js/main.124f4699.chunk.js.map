{"version":3,"sources":["components/header/header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","AppBar","position","Toolbar","Typography","variant","className","Tooltip","aria-label","IconButton","color","href","target","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAChB,OACE,cAACW,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWN,EAAQF,MAA5C,0BAGA,cAACS,EAAA,EAAD,CAAST,MAAM,mBAAmBU,aAAW,mBAA7C,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,sDACLC,OAAO,SACPJ,aAAW,gBAJb,SAME,cAAC,IAAD,QAGJ,cAACD,EAAA,EAAD,CAAST,MAAM,iBAAiBU,aAAW,iBAA3C,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,8BACLC,OAAO,SACPJ,aAAW,cAJb,SAME,cAAC,IAAD,aCxCZ,IAAMhB,EAAQqB,YAAe,CAC3BC,QAAS,CACPC,OAAQ,CAAEC,MAAO,OAAQC,MAAO,QAChCC,WAAY,CACVC,MAAO,mBACPC,QAAS,yBAEXC,QAAS,CACPC,MAAO,uBACPC,KAAM,uBACNC,KAAM,qBACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBE,MAAO,CACLL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBG,KAAM,CACJP,QAAS,4BACTK,UAAW,4BACXG,SAAU,4BACVC,KAAM,gCAiBGC,MAZf,WACE,OACE,eAAC,IAAD,CAAkBvC,MAAOA,EAAzB,UACE,cAACwC,EAAA,EAAD,IACA,cAACjC,EAAD,IACA,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,cAAnC,8CClCS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.124f4699.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Yash Agarwal\n        </Typography>\n        <Tooltip title=\"LinkedIn Profile\" aria-label=\"LinkedIn Profile\">\n          <IconButton\n            color=\"inherit\"\n            href=\"https://www.linkedin.com/in/yash-agarwal-a6a92a133/\"\n            target=\"_blank\"\n            aria-label=\"linkedin link\"\n          >\n            <LinkedInIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Github Profile\" aria-label=\"Github Profile\">\n          <IconButton\n            color=\"inherit\"\n            href=\"https://github.com/yash0412\"\n            target=\"_blank\"\n            aria-label=\"github link\"\n          >\n            <GitHubIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport './App.css';\nimport Header from './components/header/header';\n\nconst theme = createMuiTheme({\n  palette: {\n    common: { black: '#000', white: '#fff' },\n    background: {\n      paper: 'rgba(0, 0, 0, 1)',\n      default: 'rgba(33, 1, 86, 0.86)',\n    },\n    primary: {\n      light: 'rgba(17, 100, 76, 1)',\n      main: 'rgba(6, 154, 149, 1)',\n      dark: 'rgba(29, 4, 66, 1)',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    text: {\n      primary: 'rgba(255, 255, 255, 0.87)',\n      secondary: 'rgba(255, 255, 255, 0.54)',\n      disabled: 'rgba(221, 231, 230, 0.38)',\n      hint: 'rgba(255, 255, 255, 0.38)',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Typography variant=\"h6\" className=\"text-center\">\n        More content to appear soon!\n      </Typography>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}